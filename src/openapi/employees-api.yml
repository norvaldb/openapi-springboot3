openapi: "3.0.0"
info:
  version: 1.0.0
  title: Open API demo
  license:
    name: MIT
servers:
  - url: http://localhost:8080/v1
paths:
  /companies:
    get:
      summary: List all companies
      operationId: listCompanies
      tags:
        - companies
      responses:
        '200':
          description: A array of companies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompaniesResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a company
      operationId: createCompany
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /companies/{organisationNumber}:
    get:
      summary: Info for a specific company
      operationId: getCompanyByOrganisationNumber
      tags:
        - companies
      parameters:
        - name: organisationNumber
          in: path
          required: true
          description: The organisationNumber of a company to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /employees:
    get:
      summary: List all employees
      operationId: listEmployees
      tags:
        - employees
      responses:
        '200':
          description: A paged array of employees
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployeesResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create an employee
      operationId: createEmployee
      tags:
        - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /employees/{socialSecurityNumber}:
    get:
      summary: Info for a specific employee
      operationId: getEmployeeBySocialSecurityNumber
      tags:
        - employees
      parameters:
        - name: socialSecurityNumber
          in: path
          required: true
          description: The socialSecurityNumber of an employee to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployeeResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    CompanyRequest:
      type: object
      properties:
        company:
          $ref: "#/components/schemas/Company"
    EmployeeRequest:
      type: object
      properties:
        empolyee:
          $ref: "#/components/schemas/Employee"
    CompanyResponse:
      type: object
      properties:
        company:
          $ref: "#/components/schemas/Company"
    EmployeeResponse:
      type: object
      properties:
        employee:
          $ref: "#/components/schemas/Employee"
    CompaniesResponse:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: "#/components/schemas/Company"
    EmployeesResponse:
      type: object
      properties:
        employees:
          type: array
          items:
            $ref: "#/components/schemas/Employee"
    Company:
      type: object
      required:
        - name
        - organisationNumber
      properties:
        organisationNumber:
          type: string
        name:
          type: string
        employees:
          type: array
          items:
            $ref: "#/components/schemas/Employee"
    Employee:
      type: object
      required:
        - firstname
        - lastname
        - birthdate
        - socialSecurityNumber
      properties:
        socialSecurityNumber:
          type: string
        firstname:
          type: string
        lastname:
          type: string
    Error:
      type: object
      required:
        - status
        - title
      properties:
        status:
          type: integer
          format: int32
        title:
          type: string
        type:
          type: string
        detail:
          type: string
        instance:
          type: string
